echo							OK
echo simple						OK
echo -n simple					OK
echo simple text				OK
echo $PATH						OK
echo "$PATH"					OK
echo '$PATH'					OK
echo '\'						OK
echo "\\"						OK
echo "\n \n \n"					OK
echo "\n \\n \\\n"				OK
echo hi; echo hihi;				OK
echo ;;							Should throw bad syntax error
echo hi";" hihi					One too much space
echo hi "   ;   " hihi			OK
echo one; echo two; echo three;	OK
cd								OK
cd								OK
cd .							OK
cd ..							OK
cd ~							OK
cd 								OK
cd no_file						OK
cd a b c d						OK
pwd								OK
pwd								OK
pwd a							OK
pwd a b c d 					OK

XXXX export && env && unset

export							OK
export LOL						OK
export LOL=lol					OK
export LOL	 					OK
unset LOL
export LOL=lala ROR=rara  		OK
unset LOL ROR					OK
export "HI= hi"					OK
export "HI =hi"  				Should error

XXXX non built-in command

binls							OK
ls								OK
ls -al							OK
clear							OK
whoami							OK

XXXX pipe

| echo							Change err msg
echo | | echo					Weird stuff

XXXX redirection

cat < >							Should error and not read stdin
cat < <							Should error and not read stdin
cat < Makefile > test1 > test2	OK
cat < no_file > test1 > test2 	Error not handled
cat < no_file > test1 echo asdf	Error not handled

XXXX pipe & redirection

cat < Makefile | grep gcc > output Should not exit
cat < nofile | grep gcc > output   Error not handled


XXXX Commandes valides et basiques

/bin/ls 									OK
/bin/echo -n \"Hello\"						OK
/bin/echo -n \" \$PATH \"					OK
/bin/ls -a  								OK
/bin/ls -a ../								OK
awk											OK
echo										OK
echo -n 									OK
echo -n -n -n -n 							OK
echo hello                                  OK
echo A B C D E F -n G H I 					OK
/bin/ls filethatdoesntexist                 OK
echo /s/a/l/u/tXXXX 						OK
echo \$PATH:abc 							OK
echo \$PATH.abc								OK
echo \$PATH\ abc							OK
echo \$PATH\\abc							OK
echo \$PATH+abc								OK
echo "\$PATH+abc"							OK
echo \$PATH,abc								OK

XXXX Commandes valides et + complexes

ls ; pwd ; echo Hello 						OK
ls ; pwd ; 									OK
pwd;ls  									OK
\"echo\" \"hello\"							OK
\"echo\" \"he;llo\"							OK
echo \"\ls\"ls  							OK

unset qd sdfbdqfgqdfgsdg					OK

XXXX Commandes echo + variables d environnement

echo \$PATH									OK
echo \"PATH\"								OK
echo PATH 									OK
echo \'PATH\'								OK
echo \" PATH \"								OK
echo \" \$PATH \"							OK
echo \" \$PATH \$_system_name\"				OK
echo \'\$PATH\'								OK
echo \' \$PATH \'							OK
echo \"\$PATH\" \$SHELL Hello \"\$1\"		OK

XXXX Test PWD

pwd											OK
\"pwd\"										OK
"pwd" 										OK
pwd .										OK
pwd ..										OK
pwd ..										OK
pwd ; echo \$?								OK

XXXX Test Simple Quotes

'/bin/ls'									OK
l''s										OK

XXXX Test Pipe

cat file | grep bla | more					OK
ls filethatdoesntexist | grep bla | more	OK
ls | grep Makefile | rev					OK
/bin/ls \"|\" /usr/bin/grep microshell
pwd | cut -c7- | rev | tr e 42 | rev | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42  | tr e 42 | tr e 42 | tr e 42  | tr e 42 | tr e 42 | tr e 42  | tr e 42 | tr e 42 | tr e 42  | tr e 42 | tr e 42 | tr e 42  | tr e 42 | tr e 42 | tr e 42  | tr e 42 | tr e 42 | tr e 42  | tr e 42 | tr e 42 | tr e 42  | tr e 42 | tr e 42 | tr e 42  | tr e 42 | tr e 42 | tr e 42  | tr e 42 | tr e 42 | tr e 42  | tr e 42 | tr e 42 | tr e 42  | tr e 42 | tr e 42 | tr e 42  | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42 | tr e 42

	OK



pwd | cut -c7- | rev | tail | echo \$PWD	OK

XXXX Impossible de tester en récupérant PWD car on exit aussitôt
XXXX Donc on teste via un ls pour check si on est au bon endroit

cd ; ls										OK
cd . ; ls									OK
cd .. ; ls									OK
cd ~ ; ls									OK
cd ~/ ; ls									OK
cd .. ; pwd									OK
cd .. ; pwd ; echo \$?						OK
cd ; /bin/ls								OK
cd ; ../../bin/ls							OK

XXXX BUILTIN EXIT ><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>><><><

exit										OK
exit 1										OK
exit A										OK
exit 1 2									OK
exit A B C									OK
exit A1 B2									OK
exit 1A 2B									OK
exit -1										OK
exit -A										OK
exit 1-A									OK
exit 1A-									OK
exit 100000000000000000						OK
exit -100000000000000000					OK

XXXX PARSING EXIT VALUE ><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

;											Change message
;;;											Change message
<											Change message
>											Change message
;;;;;										Change message
\"; ; ;\"
\"; < ;\"
\"; > ;\"									
; pwd ; echo Hello							Change message
pwd;;;ls 									Should not exec
;;ls;;
;ls;pwd;
\"											OK
\"\"										OK
'' 											Kinda OK
\"\"\"\"\"\" 								OK
 \"  \" 									OK
|											Why read ?
  |;										Change message
;| 											Why read ?
;|<											Change message
<;
>;
;<
;>
 ;< ls ;
 ;> ls ;
'';
>>
  \"|\" ;
'|'
  '|'
|.
< \" \" < ' '<
\" \" ' ' > < > ''
<
>
<<<<<<<<
<<<
>>>

cat fddsqffgfhds							OK
cd ; ../../bin/cdfg							OK
cd ; ../../bin/ls							OK

XXXX multi lignes

'''''
'
\";"\
echo "\"
echo |

ORIGINAL BUGS
Should be packed in one block
{
	minishell @>echo Sample"
	dquote> This is some text \"
	STR B4 = \�
	STR AF = \�
	dquote> "
	|echo:1||Sample":1||This:1||is:1||some:1||text:1||\":1||":1|
}