/ var=“bonjour\toi” -> “bonjour\\toi”;
// var=“bonjour\\toi” -> “bonjour\\toi”;
// var=“bonjour\“toi” -> “bonjour\“toi”;
// var=“bonjour\’toi” -> “bonjour\\’toi”;
// var=“bonjour’toi” -> “bonjour’toi”;
// var=bonjour\toi -> “bonjourtoi”;
// var=bonjour\\toi -> “bonjour\\toi”;
// var=bonjour\“toi -> “bonjour\“toi”;
// var=bonjour\’toi -> “bonjour’toi”;
// var=bonjour\ toi -> “bonjour toi”;
// var=bonjour”toi -> retour_ligne;
// var=‘bonjour\toi’ -> “bonjour\\toi”;
// var=‘bonjour\\toi’ -> “bonjour\\\\toi”;
// var=‘bonjour\“toi’ -> “bonjour\\\“toi”;
// var=‘bonjour”toi’ -> “bonjour\“toi”;
// var=’bonjour\‘toi’ -> retour a la ligne;
[6:59 PM] export var=… ; export
7:42
echo "bip | bip ; coyotte > < \" "                   				. bip | bip ; coyotte >< " 
cat | cat | cat | ls                                               . ligne ls et 3 retour a la ligne via Entrer
$bla (non-export)                                            		. retour a la ligne
export var ="cat Makefile | grep >"             				 . affiche le Makefile et erreurs pour |, grep..
export $var                                                     	   . affiche export
export $var=test                                               . message d'erreur
export "test=ici"=coucou                               . test="ici=coucou"
c$var Makefile (avec $var=at)                      . equivalent a cat Makefile
export la même variable                                 . modifie la variable (si new value
$LESS$VAR                                                       . command not found
/bin/echo bonjour                                           . affiche bonjour
not_cmd                                                             . cmd not found
sleep 5 | exit                                                      . quitte apres 5sec
echo bonjour > $test w/ test="o1 o2"        . erreur redirection ambigue
echo $var bonjour avec $var non export     . [bonjour]
echo "" bonjour                                                 . [ bonjour]
cat -e > test1 < test2                                        . meme si test2 n'existe pas test1 doit être créé
unset =                                                                . erreur
export test="123"" ; echo $test                   . 123"
echo "12\""                                                       . 12"
cd /home/user42/                                         . chemin absolu
$                                                                          . command not found
not_cmd bonjour > salut                                . create file but error msg on standard entry
env puis export puis env                                . les variables ne doivent pas etre triées
cat bla                                                                                                  . 1
ls bonjour                                                                                            . 2
cat Makefile | grep pr | head -n 5 | cd test        (mybin)            . 1
cat Makefile | grep pr | head -n 5 | cat test        (bin)                . 1
cat Makefile | grep pr | head -n 5 | hello            (NA)                . 127
echo bonjour >>> test                                      . erreur de syntaxe && erreur 2
echo bonjour > > out                                         . erreur de syntaxe && erreur 2
echo 2 >> out1 > out2                                       . n'efface pas out1
echo 2 > out1 >> out2                                       . efface out1
cat < test                                                             . aucun fichier ou dossier de ce type
export var puis export var=test                      . verifier pas de doublon
echo bonjour > $test                                         . redirection ambigue si test pas set
file_name                                                             . cmd not found (pbm avec stat() pour les binaires)
echo ~                                                                   . /home/user42




cd ~                                                                       . redirige vers /home/user42
cd ../../../../../..                                                  . pwd : /
ctrl-C                                                                    O 130 sur bin(ex : sleep 10)&line vide //TOCHECK
$SHLVL                                                               . doit être incrémenté a chaque lancement de minishell
echo bonjour ; |                                                               . 2
echo bonjour | |                                                               . 2
|                    SHOULD ERROR                                                                      . 2
echo bonjour |;                                                                . 2
echo bonjour \; ls                                                          . bonjour ; ls
echo bonjour > test\ 1                                                  . creation du fichier "test 1"
cd $HOME/Bureau                                                       . accède au dossier Bureau
echo "\s" & echo "\\s"                                                . should have the exact same output.
echo \>                                                                          . >
echo -n -n -nnnn -nnnnm                                             . -nnnnm
echo -n -nnn hello -n                                                     . hello -n
cd - (écrit le nouveau cwd [current working directory])
dans cd {sans arg/~/-} : faire attentions aux variable d'env si par ex $OLDPWD n'existe pas
cat /dev/random | head -n 1 | cat -e                          . /!\ a faire sur la VM
unset var                                                                          . var1 ne doit pas etre unset
export ""  et unset ""                                                     . erreur
echo test > file test1                         //ERROR                   . = echo test test1 > file

echo \>\> LOOP INFINI